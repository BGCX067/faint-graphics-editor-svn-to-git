int settings_set_$name( settingsObject* self, PyObject* args, void* ){
  // From settings_stringtoint_template.txt

  if ( !PyUnicode_Check( args ) ){
    PyErr_SetString( PyExc_ValueError, "Argument must be a string" );
    return faint::setter_fail;
  }
  faint::ScopedRef utf8(PyUnicode_AsUTF8String(args));
  if ( *utf8 == nullptr ){
    return faint::setter_fail;
  }
  char* utf8Raw = PyBytes_AsString(*utf8);
  if ( utf8Raw == nullptr ){
    return faint::setter_fail;
  }
  faint::utf8_string s_value(utf8Raw);
  $string_to_int

  self->settings->Set( $setting, value );
  return faint::setter_ok;
}

static PyObject* settings_get_$name( settingsObject* self, PyObject*, void* ){
  // From settings_stringtoint_template.txt

  if ( !self->settings->Has( $setting ) ){
    PyErr_SetString( PyExc_ValueError, "$prettyname not set" );
    return nullptr;
  }
  int i_value = to_int(self->settings->Get( $setting ));
  const char* s_value = nullptr;
  $int_to_string
  return Py_BuildValue("s", s_value );
}
